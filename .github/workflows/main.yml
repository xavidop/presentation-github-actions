name: Deploy slides

on:
  workflow_dispatch: {}
  push:
    branches:
      - main

env:
  github_artifact: github-website
  slides_artifact: slides
  netlify_artifact: netlify

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Get repository name
        run: echo "REPO_NAME=${GITHUB_REPOSITORY#$GITHUB_REPOSITORY_OWNER/}" >> $GITHUB_ENV

      - name: Build
        run: npm run build -- --base /${{ env.REPO_NAME }}/

      - uses: actions/upload-pages-artifact@v3
        with:
          name: ${{ env.github_artifact }}
          path: dist
      
      - name: Build
        run: npm run build -- --out netlify

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ env.netlify_artifact }}
          path: netlify
  
  pdf_export:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - name: Install playwright
        run: npm i playwright-chromium

      - name: Export slides
        run: npm run export

      - name: Upload slides
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.slides_artifact }}
          path: "*.pdf"

  preview-deploy:
    runs-on: ubuntu-latest
    needs: build

    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: preview
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/configure-pages@v5

      - name: Deploy
        id: deployment 
        uses: actions/deploy-pages@v4
        with:
          artifact_name: ${{ env.github_artifact }}

      - name: Log the result
        run: |
          echo "Preview Site: [${{ steps.deployment.outputs.page_url }}](${{ steps.deployment.outputs.page_url }})" >> $GITHUB_STEP_SUMMARY

  production-deploy:
    runs-on: ubuntu-latest
    needs: preview-e2e
    environment:
      name: production
      url: ${{ vars.WEBSITE_URL }}

    outputs:
      website-url: ${{ vars.WEBSITE_URL }}

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.netlify_artifact }}
          path: dist

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - uses: jsmrcaga/action-netlify-deploy@v2.0.0
        with:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_DEPLOY_TO_PROD: true
          NETLIFY_SITE_ID: ${{ vars.NETLIFY_SITE_ID }}
          build_directory: dist
          NETLIFY_DEPLOY_MESSAGE: "Deployed from GitHub action"
          install_command: "echo Skipping installing the dependencies"
          build_command: "echo Skipping building the web files"

      - name: Log the result
        run: |
          echo "Production site: [${{ vars.WEBSITE_URL }}](${{ vars.WEBSITE_URL }})" >> $GITHUB_STEP_SUMMARY

  preview-e2e:
    runs-on: ubuntu-latest
    needs: preview-deploy
    environment:
      name: preview

    defaults:
      run:
        working-directory: ./e2e

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"

      - uses: ./.github/actions/validate
        with:
          website-url: ${{ vars.WEBSITE_URL }}
          test-title: "Preview Test Report"
